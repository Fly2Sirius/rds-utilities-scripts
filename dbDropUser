#!/usr/bin/env python3
import boto3
import sys
import os
import json
import funcs as f
import mysql.connector
from mysql.connector import Error
from mysql.connector import errorcode
import colorama
from colorama import Fore
from rich.console import Console
console = Console()

if len(sys.argv) > 1:
    username = sys.argv[1]
else:
    print("You must supply a username: createUser username")
    sys.exit()

mysql_port = 3306
mysql_user, mysql_password = f.get_mysql_credentials()
mysql_database = "mysql"
instance_list = f.get_endpoint_value_by_key("EndpointType","WRITER")

def dropUser(connection,user):
    drop_query = f"drop user {user}"
    #print(drop_query)

for mysql_host in instance_list:
    connection = None
    if mysql_host.startswith("sandbox-"):
        print (Fore.YELLOW
        + f"Skipping sandbox server -> {mysql_host}"
        + Fore.RESET)
    else:
        try:
            print(
                Fore.GREEN
                + f"Connecting to : {mysql_host}", end=""
                + Fore.RESET
            )
            connection = f.create_connection(
                mysql_host, mysql_user, mysql_password, mysql_port, mysql_database
            )

        except mysql.connector.Error as err:
            pass
            #print(err)
        else: 
            if connection:
                print(
                    Fore.GREEN
                    + f"\rCONNECTED : {mysql_host}"
                    + Fore.RESET
                )
                print(
                    Fore.GREEN
                    + f"Getting host info...", end=""
                    + Fore.RESET
                )
                user_list = f.getUsersAndHosts(connection,username)
                if user_list:
                    for user in user_list:
                        print(Fore.BLUE
                            + f"\rDropping user -> {user}"
                            + Fore.RESET)
                        dropUser(connection,user)
                else:
                    print(f"\rNo users for {username} on this server")   

                connection.close()
            else:
                pass
                # print(Fore.YELLOW
                #     + f"UNABLE TO CONNECT TO : {mysql_host}"
                #     + Fore.RESET)